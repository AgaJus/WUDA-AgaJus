name: frontend-ci

on:
  push:
    branches: [master]
    paths:
      - "front-end/**"
  pull_request:
    paths:
      - "front-end/**"

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Pobranie kodu z repozytorium
      - name: Checkout repo
        uses: actions/checkout@v4

      # Zudowanie i uruchamienie frontendu w Dockerze
      # (teksty podobne do backendu żeby było wszystko jasne co się dzieje we froncie)
      - name: Build and start frontend service
        run: |
          docker compose -f docker-compose.yaml up -d --build frontend
          echo "Czekam aż frontend wystartuje..."
          sleep 10

      # Testy jednostkowe frontendu 
      - name: Run frontend unit tests
        run: |
          docker compose run --rm frontend pytest -ra

      # Sprawdza czy frontend odpowiada (czy serwer po prostu odpowiada na porcie 8000)
      - name: Test frontend endpoint
        run: |
          echo "Testuję endpoint frontendu"
          curl -f http://localhost:8000 || exit 1

      # Jeżeli będzie wszystko git to wrzuci obraz do GHCR
      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin

      - name: Push Docker image to GHCR
        run: |
          docker tag frontend ghcr.io/${{ secrets.GHCR_USERNAME }}/frontend:latest
          docker push ghcr.io/${{ secrets.GHCR_USERNAME }}/frontend:latest

      # Sprzątanie
      - name: Stop and clean up
        if: always()
        run: docker compose down -v
